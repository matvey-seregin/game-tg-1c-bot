
#Область ПрограммныйИнтерфейс

// Выполняет обработку сообщения телеграм в выбранном режиме.
// 
// Параметры:
//  ДанныеЭлемента - Структура - Сообщение, полученное из телеграм
Процедура ПриОбработкеЭлементаОчереди(ДанныеЭлемента) Экспорт
	
	Если ДанныеЭлемента.Свойство("message") Тогда
		
		Сообщение = ДанныеЭлемента.message;
		
		Если Не Сообщение.Свойство("from") Тогда
			Возврат;
		КонецЕсли;
		
		Если Не Сообщение.Свойство("text") Тогда
			Возврат;
		КонецЕсли;
		
		Отправитель = Сообщение.from.id;
		
		РезультатПолученияФото = ДанныеСлучайногоФото();
		
		Если РезультатПолученияФото.Успешно Тогда
			ИнтеграцияТелеграм.ОтправитьКартинку(
				Отправитель, 
				РезультатПолученияФото.ДвоичныеДанные, 
				РезультатПолученияФото.ОписаниеФото);
		Иначе
			ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, РезультатПолученияФото.ТекстОшибки);
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеСлучайногоФото()
	
	Результат = Новый Структура;
	Результат.Вставить("Успешно", Истина);
	Результат.Вставить("ДвоичныеДанные", Неопределено);
	Результат.Вставить("ОписаниеФото", "");
	Результат.Вставить("ТекстОшибки", "");	
	
	Токен = Константы.ТокенСервисаПоискаФото.Получить();
	
	Если Не ЗначениеЗаполнено(Токен) Тогда
		Результат.ТекстОшибки = "Произошла внутреннняя ошибка, обратитесь к администратору бота @matvey.seregin";
		Результат.Успешно = Ложь;
		ЗаписьЖурналаРегистрации("ОшибкаРаботыБота.СлучайноеФото", УровеньЖурналаРегистрации.Ошибка,,,
			"Заполните токен для работы с сервисом");
		Возврат Результат;
	КонецЕсли;	
		
	Соединение = Новый HTTPСоединение("api.unsplash.com",,,,,, Новый ЗащищенноеСоединениеOpenSSL);
	
	ШаблонЗаголовка = "Client-ID %1";
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", СтрШаблон(ШаблонЗаголовка, Токен));
	
	Запрос = Новый HTTPЗапрос("/photos/random", Заголовки);
	
	Ответ = Соединение.Получить(Запрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		Результат.ТекстОшибки = "Произошла внутреннняя ошибка, обратитесь к администратору бота @matvey.seregin";
		Результат.Успешно = Ложь;
		ЗаписьЖурналаРегистрации("ОшибкаРаботыБота.СлучайноеФото", УровеньЖурналаРегистрации.Ошибка,,,
			"Ошибка вызова сервиса");
		Возврат Результат;
	КонецЕсли;
	
	СтрокаJSON = Ответ.ПолучитьТелоКакСтроку();
	
	Чтение = Новый ЧтениеJSON();
	Чтение.УстановитьСтроку(СтрокаJSON);
	ДанныеОтвета = ПрочитатьJSON(Чтение, Истина);
	Чтение.Закрыть();
			
	Результат.ОписаниеФото = ДанныеОтвета["alt_description"];
	
	СсылкаНаФото = ДанныеОтвета["urls"]["regular"];
	
	Попытка
		Результат.ДвоичныеДанные = ПолучитьДанныеФото(СсылкаНаФото);
	Исключение
		Результат.ТекстОшибки = "Произошла внутреннняя ошибка, обратитесь к администратору бота @matvey.seregin";
		Результат.Успешно = Ложь;
		ПодробноеПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("ОшибкаРаботыБота.СлучайноеФото", УровеньЖурналаРегистрации.Ошибка,,,
			"Ошибка скачивания картинки: " + ПодробноеПредставлениеОшибки);
		Возврат Результат;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДанныеФото(СсылкаНаФото)
	
	СсылкаБезПротокола = Сред(СсылкаНаФото, 9);
	
	НомерПервогоСлеша = СтрНайти(СсылкаБезПротокола, "/");
	
	АдресСервера = Лев(СсылкаБезПротокола, НомерПервогоСлеша - 1);
	АдресРесурсаНаСервере = Сред(СсылкаБезПротокола, НомерПервогоСлеша);
	
	Соединение = Новый HTTPСоединение(АдресСервера,,,,,, Новый ЗащищенноеСоединениеOpenSSL);		
	Запрос = Новый HTTPЗапрос(АдресРесурсаНаСервере);
	
	Ответ = Соединение.Получить(Запрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		ВызватьИсключение "Ошибка скачивания фото, код состояния: " + Ответ.КодСостояния;
	КонецЕсли;
	
	Возврат Ответ.ПолучитьТелоКакДвоичныеДанные();
	
КонецФункции

#КонецОбласти
